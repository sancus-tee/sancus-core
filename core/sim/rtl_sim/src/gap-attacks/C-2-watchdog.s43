.include "pmem_defs.asm"
.include "sancus_macros.asm"

.set secret_data_start, DMEM_240
.set secret_data_end, DMEM_242

.global main
main:
    disable_wdt
    eint

    ; enable sancus module and jump to its entry point
    sancus_enable #1234, #enclave_start, #enclave_end, #secret_data_start, #secret_data_end

    clr r14

    ; set up TIMER_A for measuring time (not interrupting)
    mov #0x4, &TACTL
    mov #0xff, &TACCR0
    mov #0x0, &TACCTL0
    mov #0x210, &TACTL

    enable_wdt_irq
    mov #0x5a3b, &WDTCTL

    ; delaying the start of the enclave for the WDT to interrupt at the right time
    mov &dummy, &dummy
    mov &dummy, &dummy
    mov &dummy, &dummy
    mov &dummy, &dummy
    mov &dummy, &dummy
    mov &dummy, &dummy
    mov &dummy, &dummy
    mov &dummy, &dummy
    nop
    nop

    br #enclave_start

dummy:
    nop

    /* ----------------------       SANCUS MODULE        ---------------------- */
enclave_start:
    cmp #__SECRET, r14
    jz 1f
    jmp 2f
1:
    mov r6, r6
    mov r6, r6
2:
    mov r7, r7

enclave_end:

    /* ----------------------     INTERRUPT ROUTINES     ---------------------- */

IRQ_VECTOR:
    mov #0x0, &TACTL
    mov &TAR, r14
    ; 0x57 in TAR when SECRET == 0
    cmp #0x57, r14
    jz zero
    mov #1, r14
    jmp end_of_test

zero:
    mov #0, r14

    /* ----------------------        END OF TEST         ---------------------- */
end_of_test:
	mov #0x2000, r15
	br #0xffff

    /* ----------------------     INTERRUPT VECTORS      ---------------------- */

.section .vectors, "a"
.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
.word end_of_test  ; Interrupt  1                      <unused>
.word end_of_test  ; Interrupt  2                      <unused>
.word end_of_test  ; Interrupt  3                      <unused>
.word end_of_test  ; Interrupt  4                      <unused>
.word end_of_test  ; Interrupt  5                      <unused>
.word end_of_test  ; Interrupt  6                      <unused>
.word end_of_test  ; Interrupt  7                      <unused>
.word end_of_test   ; Interrupt  8                      IRQ
.word end_of_test  ; Interrupt  9                      <unused>
.word IRQ_VECTOR  ; Interrupt 10                      Watchdog timer
.word end_of_test  ; Interrupt 11                      <unused>
.word end_of_test  ; Interrupt 12                      <unused>
.word end_of_test  ; Interrupt 13                      SM_IRQ
.word end_of_test  ; Interrupt 14                      NMI
.word main         ; Interrupt 15 (highest priority)   RESET
